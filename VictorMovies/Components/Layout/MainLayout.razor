@inherits LayoutComponentBase

<MudThemeProvider Theme="@theme" IsDarkMode="@isDarkMode" />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout>
    @* Main/Root page container *@
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start"
                       OnClick="@DrawerToggle" />
        <MudAvatar Icon="@Icons.Material.Filled.Movie" Color="Color.Primary" Size="Size.Medium" Class="ml-2" />
        <MudText Typo="Typo.h4" Class="ml-2">Victor's Movies</MudText>
        <MudSpacer />
        <MudIconButton Icon="@DarkLightModeButtonIcon" Color="Color.Inherit"
                       OnClick="@DarkModeToggle" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="mt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>

<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">🗙</span>
</div>


@code {
    private bool drawerOpen = true;
    private bool isDarkMode = true;
    private MudTheme? theme = null;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        theme = new()
        {
            PaletteLight = lightPalette,
            PaletteDark = darkPalette,
            LayoutProperties = new LayoutProperties()
        };
    }

    private void DrawerToggle()
    {
        drawerOpen = !drawerOpen;
    }

    private void DarkModeToggle()
    {
        isDarkMode = !isDarkMode;
    }

    private readonly PaletteLight lightPalette = new()
    {
        Primary = "#a6282f",
        Secondary = "#ffcc00",
        AppbarBackground = "#f5f5f5",
        AppbarText = "#212121",
        Background = "#ffffff",
        DrawerBackground = "#f9f2d1",
        DrawerText = "#212121",
        DrawerIcon = "#212121",
        TextPrimary = "#212121",
        TextSecondary = "#6d6d6d",
        GrayLight = "#ececec",
        GrayLighter = "#fafafa",
        Info = "#0288d1",
        Success = "#43a047",
        Warning = "#ffa000",
        Error = "#d32f2f"
    };

    private readonly PaletteDark darkPalette = new()
    {
        Primary = "#ff3d00",
        Secondary = "#ffc400",
        AppbarBackground = "#1c1c1e",
        AppbarText = "#e0e0e0",
        Background = "#121212",
        Surface = "#1e1e1e",
        DrawerBackground = "#1b1b1b",
        TextPrimary = "#f5f5f5",
        TextSecondary = "#c2c2c2",
        GrayLight = "#2a2a2a",
        GrayLighter = "#1e1e1e",
        Info = "#4fc3f7",
        Success = "#66bb6a",
        Warning = "#ffa726",
        Error = "#ef5350"
    };

    public string DarkLightModeButtonIcon => isDarkMode switch
    {
        true => Icons.Material.Rounded.AutoMode,
        false => Icons.Material.Outlined.DarkMode
    };
}